diff -up nfs-utils-1.2.3/utils/mount/nfsumount.c.orig nfs-utils-1.2.3/utils/mount/nfsumount.c
--- nfs-utils-1.2.3/utils/mount/nfsumount.c.orig	2012-03-28 10:22:14.000000000 -0400
+++ nfs-utils-1.2.3/utils/mount/nfsumount.c	2012-03-28 10:23:07.000000000 -0400
@@ -139,6 +139,53 @@ static int del_mtab(const char *spec, co
 }
 
 /*
+ * To ensure the path is found during unmounts, strip
+ * off the multiple '/' or add a '/' if one does not exist.
+ */
+static inline char *
+normalize_path(char *spec) 
+{
+	char *colen, *ptr, *str, *dev = NULL;
+
+	if ((colen = strchr(spec, ':')) == NULL)
+		return NULL;
+
+	if (*(colen + 1) != '/') {
+		dev = str = malloc(strlen(spec) + 2);
+		if (dev == NULL) 
+			return NULL;
+
+		ptr = spec;
+		while (ptr <= colen)
+			*(str++) = *(ptr++);
+		*str++='/';
+		while (*ptr)
+			*(str++) = *(ptr++);
+		*str='\0';
+
+		return dev;
+	}
+
+	if ((str = strstr(spec, "//")) != NULL) {
+		if (dev == NULL) {
+			dev = strdup(spec);
+			if (dev == NULL)
+				return NULL;
+		}
+		while ((str = strstr(dev, "//")) != NULL) {
+			ptr = str;
+			while (*ptr && *ptr == '/')
+				ptr++;
+			str++;
+			while (*ptr)
+				*(str++) = *(ptr++);
+			*str = '\0';
+		}
+	} 
+	return dev;
+}
+
+/*
  * Discover mount server's hostname/address by examining mount options
  *
  * Returns a pointer to a string that the caller must free, on
@@ -260,6 +307,7 @@ static int nfs_umount_is_vers4(const str
 	struct mntentchn *pmc;
 	struct mount_options *options;
 	int retval;
+	char *normpath=NULL;
 
 	retval = -1;
 	pmc = getprocmntdirbackward(mc->m.mnt_dir, NULL);
@@ -276,8 +324,20 @@ static int nfs_umount_is_vers4(const str
 		 */
 		while (pmc->m.mnt_fsname[nlen - 1] == '/')
 			nlen--;
-		if (strncmp(pmc->m.mnt_fsname, mc->m.mnt_fsname, nlen) != 0)
-			continue;
+		/*
+		 * When the mtab and /proc/mounts are not the same
+		 * file, normalize the path in the mtab if needed.
+		 */
+		if (mtab_is_writable())
+			normpath = normalize_path(mc->m.mnt_fsname);
+
+		if (strncmp(pmc->m.mnt_fsname, mc->m.mnt_fsname, nlen) != 0) {
+			/* Is there a normalized path, if so compare that one too */
+			if (normpath == NULL)
+				continue;
+			if (strncmp(pmc->m.mnt_fsname, normpath, nlen) != 0)
+				continue;
+		}
 
 		if (strcmp(pmc->m.mnt_type, "nfs4") == 0)
 			goto out_nfs4;
@@ -314,6 +374,7 @@ out_nfs:
 	retval = 0;
 
 out:
+	free(normpath);
 	return retval;
 }
 
