diff -up nfs-utils-1.2.3/support/include/nfslib.h.orig nfs-utils-1.2.3/support/include/nfslib.h
--- nfs-utils-1.2.3/support/include/nfslib.h.orig	2015-02-19 12:35:48.968967904 -0500
+++ nfs-utils-1.2.3/support/include/nfslib.h	2015-02-19 12:47:10.514263582 -0500
@@ -25,6 +25,12 @@
 #ifndef _PATH_EXPORTS
 #define _PATH_EXPORTS		"/etc/exports"
 #endif
+#ifndef _PATH_EXPORTS_D
+#define _PATH_EXPORTS_D         "/etc/exports.d"
+#endif
+#ifndef _EXT_EXPORT
+#define _EXT_EXPORT             ".exports"
+#endif
 #ifndef _PATH_IDMAPDCONF
 #define _PATH_IDMAPDCONF	"/etc/idmapd.conf"
 #endif
diff -up nfs-utils-1.2.3/support/nfs/exports.c.orig nfs-utils-1.2.3/support/nfs/exports.c
--- nfs-utils-1.2.3/support/nfs/exports.c.orig	2015-02-19 12:35:48.981968158 -0500
+++ nfs-utils-1.2.3/support/nfs/exports.c	2015-02-19 12:47:10.515263601 -0500
@@ -783,8 +783,9 @@ struct export_features *get_export_featu
 	fd = open(path, O_RDONLY);
 	if (fd == -1)
 		goto good;
-	fd = read(fd, buf, 50);
-	if (fd == -1)
+	c = read(fd, buf, 50);
+	close(fd);
+	if (c == -1)
 		goto err;
 	c = sscanf(buf, "%x %x", &ef.flags, &ef.secinfo_flags);
 	if (c != 2)
diff -up nfs-utils-1.2.3/utils/exportfs/exportfs.c.orig nfs-utils-1.2.3/utils/exportfs/exportfs.c
--- nfs-utils-1.2.3/utils/exportfs/exportfs.c.orig	2015-02-19 12:35:48.975968041 -0500
+++ nfs-utils-1.2.3/utils/exportfs/exportfs.c	2015-02-19 12:47:10.517263641 -0500
@@ -26,6 +26,7 @@
 #include <fcntl.h>
 #include <netdb.h>
 #include <errno.h>
+#include <dirent.h>
 
 #include "sockaddr.h"
 #include "misc.h"
@@ -42,6 +43,7 @@ static void	error(nfs_export *exp, int e
 static void	usage(const char *progname);
 static void	validate_export(nfs_export *exp);
 static int	matchhostname(const char *hostname1, const char *hostname2);
+static void	export_d_read(const char *dname);
 
 static const char *lockfile = EXP_LOCKFILE;
 static int _lockfd = -1;
@@ -151,8 +153,10 @@ main(int argc, char **argv)
 	grab_lockfile();
 	atexit(release_lockfile);
 
-	if (f_export && ! f_ignore)
+	if (f_export && ! f_ignore) {
 		export_read(_PATH_EXPORTS);
+		export_d_read(_PATH_EXPORTS_D);
+	}
 	if (f_export) {
 		if (f_all)
 			export_all(f_verbose);
@@ -604,6 +608,59 @@ out:
 	return result;
 }
 
+/* Based on mnt_table_parse_dir() in
+   util-linux-ng/shlibs/mount/src/tab_parse.c */
+static void
+export_d_read(const char *dname)
+{
+	int n = 0, i;
+	struct dirent **namelist = NULL;
+
+
+	n = scandir(dname, &namelist, NULL, versionsort);
+	if (n < 0)
+		xlog(L_NOTICE, "scandir %s: %s\n", dname, strerror(errno));
+	else if (n == 0)
+		return;
+
+	for (i = 0; i < n; i++) {
+		struct dirent *d = namelist[i];
+		size_t namesz;
+		char fname[PATH_MAX + 1];
+		int fname_len;
+
+
+		if (d->d_type != DT_UNKNOWN 
+		    && d->d_type != DT_REG
+		    && d->d_type != DT_LNK)
+			continue;
+		if (*d->d_name == '.')
+			continue;
+
+#define _EXT_EXPORT_SIZ   (sizeof(_EXT_EXPORT) - 1)
+		namesz = strlen(d->d_name);
+		if (!namesz 
+		    || namesz < _EXT_EXPORT_SIZ + 1
+		    || strcmp(d->d_name + (namesz - _EXT_EXPORT_SIZ),
+			      _EXT_EXPORT))
+			continue;
+
+		fname_len = snprintf(fname, PATH_MAX +1, "%s/%s", dname, d->d_name);
+		if (fname_len > PATH_MAX) {
+			xlog(L_WARNING, "Too long file name: %s in %s\n", d->d_name, dname);
+			continue;
+		}
+
+		export_read(fname);
+	}
+		
+	for (i = 0; i < n; i++)
+		free(namelist[i]);
+	free(namelist);
+
+	return;
+}
+
 static char
 dumpopt(char c, char *fmt, ...)
 {
diff -up nfs-utils-1.2.3/utils/exportfs/exportfs.man.orig nfs-utils-1.2.3/utils/exportfs/exportfs.man
--- nfs-utils-1.2.3/utils/exportfs/exportfs.man.orig	2015-02-19 12:35:48.972967981 -0500
+++ nfs-utils-1.2.3/utils/exportfs/exportfs.man	2015-02-19 12:47:10.517263641 -0500
@@ -37,11 +37,15 @@ when a client sends an NFS MOUNT request
 .PP
 Normally the master export table is initialized with the contents of
 .I /etc/exports
+and files under
+.I /etc/exports.d
 by invoking
 .BR "exportfs -a" .
 However, a system administrator can choose to add or delete
 exports without modifying
 .I /etc/exports
+or files under
+.I /etc/exports.d
 by using the
 .B exportfs
 command.
@@ -92,17 +96,24 @@ Specify a list of export options in the 
 .B -i
 Ignore the
 .I /etc/exports
-file.  Only default options and options given on the command line are used.
+file and files under
+.I /etc/exports.d
+directory.  Only default options and options given on the command line are used.
 .TP
 .B -r
 Reexport all directories, synchronizing
 .I /var/lib/nfs/etab
 with
-.IR /etc/exports .
+.IR /etc/exports 
+and files under 
+.IR /etc/exports.d .
 This option removes entries in
 .I /var/lib/nfs/etab
 which have been deleted from
-.I /etc/exports, and removes any entries from the
+.I /etc/exports
+or files under
+.IR /etc/exports.d , 
+and removes any entries from the
 kernel export table which are no longer valid.
 .TP
 .B -u
@@ -130,6 +141,8 @@ when adding new entries to the export ta
 .BR "exportfs -a" ,
 all exports listed in
 .I /etc/exports
+and files under
+.I /etc/exports.d
 are added to
 .IR /var/lib/nfs/etab .
 The kernel's export table is also updated as needed.
@@ -157,7 +170,9 @@ several sources.
 The default export options are
 .BR sync,ro,root_squash,wdelay .
 These can be overridden by entries in
-.IR /etc/exports .
+.IR /etc/exports 
+or files under
+.IR /etc/exports.d .
 .PP
 A system administrator may override options from these sources using the
 .B -o
@@ -196,6 +211,8 @@ to display the export options for each e
 .SH EXAMPLES
 The following adds all directories listed in
 .I /etc/exports
+and files under
+.I /etc/exports.d
 to
 .I /var/lib/nfs/etab
 and pushes the resulting export entries into the kernel:
@@ -223,7 +240,9 @@ directory:
 .fi
 .PP
 To unexport all exports listed in
-.IR /etc/exports :
+.IR /etc/exports 
+and files under
+.IR /etc/exports.d :
 .PP
 .nf
 .B "# exportfs -au
@@ -254,6 +273,13 @@ if they themselves are no longer valid t
 .I /etc/exports
 input file listing exports, export options, and access control lists
 .TP 2.5i
+.I /etc/exports.d
+directory where extra input files are stored.
+.B Note:
+only files that end with 
+.I .exports
+are used.
+.TP 2.5i
 .I /var/lib/nfs/etab
 master table of exports
 .TP 2.5i
diff -up nfs-utils-1.2.3/utils/exportfs/exports.man.orig nfs-utils-1.2.3/utils/exportfs/exports.man
--- nfs-utils-1.2.3/utils/exportfs/exports.man.orig	2015-02-19 12:35:48.977968081 -0500
+++ nfs-utils-1.2.3/utils/exportfs/exports.man	2015-02-19 12:47:10.517263641 -0500
@@ -435,6 +435,24 @@ export entry for
 .B /home/joe
 in the example section below, which maps all requests to uid 150 (which
 is supposedly that of user joe).
+.SS Extra Export Tables
+After reading 
+.I /etc/exports 
+.B exportfs
+reads files under 
+.I /etc/exports.d. 
+directory as extra export tables.
+.B exportfs
+regards only a file which name is ended with 
+.I .exports
+and
+not started with 
+.I . 
+as an extra export file. A file which name
+is not met this condition is just ignored.
+The format for extra export tables is the same as 
+.I /etc/exports
+.
 .IP
 .SH EXAMPLE
 .PP
@@ -484,6 +502,7 @@ a character class wildcard match.
 '''entry.
 .SH FILES
 /etc/exports
+/etc/exports.d
 .SH SEE ALSO
 .BR exportfs (8),
 .BR netgroup (5),
