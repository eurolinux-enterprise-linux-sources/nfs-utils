diff -up nfs-utils-1.2.3/utils/mountd/cache.c.orig nfs-utils-1.2.3/utils/mountd/cache.c
--- nfs-utils-1.2.3/utils/mountd/cache.c.orig	2014-08-25 13:27:49.748578247 -0400
+++ nfs-utils-1.2.3/utils/mountd/cache.c	2014-08-25 13:30:27.271578242 -0400
@@ -257,6 +257,26 @@ static int get_uuid(const char *val, int
 	return 1;
 }
 
+/*
+ * Don't ask libblkid for these filesystems. Note that BTRF is ignored, because
+ * we generate the identifier from statfs->f_fsid. The rest are network or
+ * pseudo filesystems. (See <linux/magic.h> for the basic IDs.)
+ */
+static const long int nonblkid_filesystems[] = {
+    0x2fc12fc1,    /* ZFS_SUPER_MAGIC */
+    0x9123683E,    /* BTRFS_SUPER_MAGIC */
+    0xFF534D42,    /* CIFS_MAGIC_NUMBER */
+    0x1373,        /* DEVFS_SUPER_MAGIC */
+    0x73757245,    /* CODA_SUPER_MAGIC */
+    0x564C,        /* NCP_SUPER_MAGIC */
+    0x6969,        /* NFS_SUPER_MAGIC */
+    0x9FA0,        /* PROC_SUPER_MAGIC */
+    0x62656572,    /* SYSFS_MAGIC */
+    0x517B,        /* SMB_SUPER_MAGIC */
+    0x01021994,    /* TMPFS_SUPER_MAGIC */
+    0        /* last */
+};
+
 static int uuid_by_path(char *path, int type, int uuidlen, char *uuid)
 {
 	/* get a uuid for the filesystem found at 'path'.
@@ -288,12 +308,23 @@ static int uuid_by_path(char *path, int 
 	 */
 	struct statfs64 st;
 	char fsid_val[17];
-	const char *blkid_val;
+	const char *blkid_val = NULL;
 	const char *val;
+	int rc;
 
-	blkid_val = get_uuid_blkdev(path);
+	rc = statfs64(path, &st);
+
+	if (type == 0 && rc == 0) {
+		const long int *bad;
+		for (bad = nonblkid_filesystems; *bad; bad++) {
+			if (*bad == st.f_type)
+				break;
+		}
+		if (*bad == 0)
+			blkid_val = get_uuid_blkdev(path);
+	}
 
-	if (statfs64(path, &st) == 0 &&
+	if (rc == 0 &&
 	    (st.f_fsid.__val[0] || st.f_fsid.__val[1]))
 		snprintf(fsid_val, 17, "%08x%08x",
 			 st.f_fsid.__val[0], st.f_fsid.__val[1]);
